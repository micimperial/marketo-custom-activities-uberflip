function rewriteUrls(e){accountId=e.query.vars.split("|")[0],listId=e.query.vars.split("|")[1],console.log(listId+" â€“ "+accountId),subscribersUrl="accounts/"+accountId+"/lists/"+listId+"/subscribers",customFieldsUrl="accounts/"+accountId+"/lists/"+listId+"/custom_fields"}var express=require("express"),bodyParser=require("body-parser"),url=require("url"),pkg=require("./package"),NodeAweber=require("aweber-api-nodejs"),MongoClient=require("mongodb").MongoClient,assert=require("assert"),url="mongodb://admin:admin@ds061278.mlab.com:61278/aweber",port=process.env.PORT;port||(console.error("Error: The PORT environment variable is not set."),process.exit(1));var consumerKey=process.env.CONSUMER_KEY;consumerKey||(console.error("Error: The CONSUMER_KEY environment variable is not set."),process.exit(1));var consumerSecret=process.env.CONSUMER_SECRET;consumerSecret||(console.error("Error: The CONSUMER_SECRET environment variable is not set."),process.exit(1));var createNA=function(e){var o=e.protocol+"://"+e.hostname+"/auth-callback",t=new NodeAweber(consumerKey,consumerSecret,o);return t},apiToken,apiTokenSecret;MongoClient.connect(url,function(e,o){assert.equal(null,e),o.collection("tokens").findOne({},function(e,t){assert.equal(null,e),null!=t&&(apiToken=t.apiToken,apiTokenSecret=t.apiTokenSecret),console.log(apiTokenSecret),o.close()})});var accountId,listId,subscribersUrl,customFieldsUrl,app=express();app.use(bodyParser.json()),app.get("/",function(e,o){o.send(pkg.name+" listening on "+port)}),app.get("/reset",function(e,o){apiToken=null,apiTokenSecret=null,MongoClient.connect(url,function(e,o){assert.equal(null,e),o.collection("tokens").remove({}),o.close()}),o.send("Auth reset"+apiToken+" - "+apiTokenSecret)}),app.get("/auth",function(e,o){if(apiToken&&apiTokenSecret)return void o.send(pkg.name+" already has an AWeber API token.");var t=createNA(e);t.requestToken(function(e,t){return e?void o.send(pkg.name+" wasn't able to authorize to AWeber.<br/>"+JSON.stringify(e)):(apiToken=null,apiTokenSecret=t.oauth_token_secret,void o.redirect("https://auth.aweber.com/1.0/oauth/authorize?oauth_token="+t.oauth_token))})}),app.get("/auth-callback",function(e,o){if(apiToken)return void o.send(pkg.name+" already has an AWeber API token.");if(e.query.oauth_token&&e.query.oauth_verifier){var t=createNA(e);t.accessToken(e.query.oauth_token,e.query.oauth_verifier,apiTokenSecret,function(e,t){return e?void o.send(pkg.name+" wasn't able to authorize to AWeber.<br/>"+JSON.stringify(e)):(apiToken=t.oauth_token,apiTokenSecret=t.oauth_token_secret,MongoClient.connect(url,function(e,o){assert.equal(null,e),o.collection("tokens").remove({}),o.collection("tokens").insert({apiToken:apiToken,apiTokenSecret:apiTokenSecret}),o.close()}),void o.send(pkg.name+" was able to authorize to AWeber successfully."))})}}),app.post("/cta-get-fields",function(e,o){rewriteUrls(e);var t=createNA(e),n=t.api(apiToken,apiTokenSecret);n.request("get",customFieldsUrl,{},function(e,t){if(e)return o.json({errors:[{message:"Unable to retrieve custom fields: "+e.error.message,code:e.error.status+" "+e.error.type}]}),o.status(500),void o.end();var n=[{display_name:"Email Address",html_name:"email_address",control_type:"text",required:!0,active:!0,locked:!0},{display_name:"First Name",html_name:"first_name",control_type:"text",required:!1,active:!0,locked:!1},{display_name:"Last Name",html_name:"last_name",control_type:"text",required:!1,active:!0,locked:!1}];t.entries.forEach(function(e){var o={display_name:e.name,html_name:e.name,control_type:"text",required:!1,active:!0,locked:!1};n.push(o)}),o.json(n),o.status(200),o.end()},function(e){e.error&&o.json({errors:[{message:e.error,code:e.code}]}),o.status(500),o.end()})}),app.post("/cta-submitted",function(e,o){rewriteUrls(e);var t=createNA(e),n=t.api(apiToken,apiTokenSecret),i=e.body.submission,s=i.fields.email_address,r=""!=i.fields.first_name&&""!=i.fields.last_name?i.fields.first_name+" "+i.fields.last_name:"",c="From Uberflip CTA with ID-"+e.body.cta_id,a="undefined"!=typeof i.fields.tags&&null!==i.fields.tags?JSON.stringify(i.fields.tags.split(",")):"",u=JSON.stringify(i.fields),l={"ws.op":"create",ip_address:i.ip_address,email:s,name:r,misc_notes:c,tags:a,custom_fields:u};console.log(JSON.stringify(t)),console.log(JSON.stringify(l)),n.request("post",subscribersUrl,l,function(e,t){return e?(console.log(e),void(400===e.error.status&&"WebServiceError"===e.error.type&&"email: Subscriber already subscribed."===e.error.message?n.request("get",subscribersUrl,{"ws.op":"find",email:s},function(e,t){if(e)return o.json({errors:[{message:"Unable to find subscriber with email '"+s+"': "+e.error.message,code:e.error.status+" "+e.error.type}]}),o.status(500),void o.end();if(1!==t.entries.length)return o.json({errors:[{message:"There are "+t.entries.length+" subscribers with email '"+s+"' when exactly 1 was expected."}]}),o.status(500),void o.end();var i=""+t.entries[0].id;console.dir(l),n.request("patch",subscribersUrl+"/"+i,l,function(e,t){return console.log(i),e?(console.dir(e),o.json({errors:[{message:"Unable to update subscriber "+i+": "+e.error.message,code:e.error.status+" "+e.error.type}]}),o.status(500),void o.end()):(console.dir(t),o.status(200),void o.end())})}):(o.json({errors:[{message:"Unable to create subscriber for email '"+s+"': "+e.error.message,code:e.error.status+" "+e.error.type}]}),o.status(500),o.end()))):(o.status(200),void o.end())})}),app.listen(port,function(){console.log(pkg.name+" listening on port "+port)});
